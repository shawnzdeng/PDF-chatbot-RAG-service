apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: rag-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: rag-system
data:
  prometheus.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: rag-system
data:
  dashboard.yml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/provisioning/dashboards/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: rag-system
data:
  rag-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "RAG System Dashboard",
        "description": "Monitoring dashboard for RAG Chatbot system",
        "tags": ["rag", "chatbot", "monitoring"],
        "style": "dark",
        "timezone": "browser",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(rag_requests_total[5m])",
                "legendFormat": "Requests/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "reqps",
                "min": 0
              }
            },
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Active Sessions",
            "type": "stat",
            "targets": [
              {
                "expr": "rag_active_sessions",
                "legendFormat": "Sessions"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "short",
                "min": 0
              }
            },
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 6,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "Response Time",
            "type": "stat",
            "targets": [
              {
                "expr": "rag_response_time_seconds_avg",
                "legendFormat": "Avg Response Time"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "s",
                "min": 0
              }
            },
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 12,
              "y": 0
            }
          },
          {
            "id": 4,
            "title": "Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(rag_errors_total[5m])",
                "legendFormat": "Errors/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "short",
                "min": 0
              }
            },
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 18,
              "y": 0
            }
          },
          {
            "id": 5,
            "title": "System CPU Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rag_system_cpu_percent",
                "legendFormat": "CPU %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "min": 0,
                "max": 100
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 6,
            "title": "System Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rag_system_memory_percent",
                "legendFormat": "Memory %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "min": 0,
                "max": 100
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          },
          {
            "id": 7,
            "title": "RAG Operations",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(rag_query_embeddings_total[5m])",
                "legendFormat": "Query Embeddings/sec"
              },
              {
                "expr": "rate(rag_retrievals_total[5m])",
                "legendFormat": "Retrievals/sec"
              },
              {
                "expr": "rate(rag_response_generations_total[5m])",
                "legendFormat": "Response Generations/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "reqps",
                "min": 0
              }
            },
            "gridPos": {
              "h": 8,
              "w": 24,
              "x": 0,
              "y": 16
            }
          }
        ],
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "schemaVersion": 36,
        "version": 1
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: rag-system
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: rag-system
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: rag-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: grafana.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
