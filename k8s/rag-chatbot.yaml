apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-chatbot
  namespace: rag-system
  labels:
    app: rag-chatbot
spec:
  replicas: 1  # Reduce to 1 for Minikube memory constraints
  selector:
    matchLabels:
      app: rag-chatbot
  template:
    metadata:
      labels:
        app: rag-chatbot
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8502"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: rag-chatbot
        image: rag-chatbot:latest  # Use the latest built image
        imagePullPolicy: Never  # For local Minikube development
        ports:
        - containerPort: 8501
          name: http
        - containerPort: 8502
          name: metrics
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: rag-secrets
              key: OPENAI_API_KEY
        - name: QDRANT_API_KEY
          valueFrom:
            secretKeyRef:
              name: rag-secrets
              key: QDRANT_API_KEY
        envFrom:
        - configMapRef:
            name: rag-config
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 45
          periodSeconds: 15
        # Remove problematic startup probe temporarily
        # startupProbe:
        #   httpGet:
        #     path: /health
        #     port: 8502
        #   initialDelaySeconds: 15
        #   periodSeconds: 5
        #   failureThreshold: 10
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: rag-chatbot-service
  namespace: rag-system
  labels:
    app: rag-chatbot
spec:
  ports:
  - port: 8501
    targetPort: 8501
    name: http
  - port: 8502
    targetPort: 8502
    name: metrics
  selector:
    app: rag-chatbot
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rag-chatbot-ingress
  namespace: rag-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: rag-chatbot.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rag-chatbot-service
            port:
              number: 8501
